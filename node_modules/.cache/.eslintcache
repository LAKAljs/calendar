[{"C:\\Users\\ljs\\Desktop\\calendar\\src\\index.js":"1","C:\\Users\\ljs\\Desktop\\calendar\\src\\App.js":"2","C:\\Users\\ljs\\Desktop\\calendar\\src\\reportWebVitals.js":"3","C:\\Users\\ljs\\Desktop\\calendar\\src\\AuthenticationFolder\\authConfig.js":"4","C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\LoginHandler.jsx":"5","C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\Request.jsx":"6","C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\GraphCalls.jsx":"7","C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\GetEvent.jsx":"8"},{"size":820,"mtime":1673441921677,"results":"9","hashOfConfig":"10"},{"size":667,"mtime":1673441921672,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1673441921677,"results":"12","hashOfConfig":"10"},{"size":907,"mtime":1673441921673,"results":"13","hashOfConfig":"10"},{"size":672,"mtime":1673442731495,"results":"14","hashOfConfig":"10"},{"size":7312,"mtime":1673599455871,"results":"15","hashOfConfig":"10"},{"size":1791,"mtime":1673598732950,"results":"16","hashOfConfig":"10"},{"size":1179,"mtime":1673599400749,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"qfyzoa",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\ljs\\Desktop\\calendar\\src\\index.js",[],[],[],"C:\\Users\\ljs\\Desktop\\calendar\\src\\App.js",["46","47"],[],"import { AuthenticatedTemplate, UnauthenticatedTemplate } from '@azure/msal-react';\r\nimport './App.css';\r\nimport { ReqUsers } from './components/DataCollection/LoginHandler';\r\nimport {GetUsers} from './components/DataCollection/Request';\r\nimport {useEffect, useState} from 'react';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n      <div className=\"App\">\r\n        <AuthenticatedTemplate>\r\n          <div>\r\n            <h1>Se hvem der er ledige her:</h1>\r\n            <GetUsers />\r\n          </div>\r\n        </AuthenticatedTemplate>\r\n        <UnauthenticatedTemplate>\r\n          <ReqUsers/>\r\n        </UnauthenticatedTemplate>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ljs\\Desktop\\calendar\\src\\reportWebVitals.js",[],[],"C:\\Users\\ljs\\Desktop\\calendar\\src\\AuthenticationFolder\\authConfig.js",[],[],"C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\LoginHandler.jsx",[],[],"C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\Request.jsx",["48","49","50","51"],[],"import { useState } from 'react';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Moment from 'moment/moment';\r\nimport MomentTimezone from 'moment-timezone';\r\nimport '../../stylesheets/event-box.css'\r\n\r\nexport function GetUsers(){        \r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const [event, setEvent] = useState([]);  \r\n\r\n    var time = Moment().format('MMM DD, YYYY HH:mm:ss');\r\n\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            time = Moment().format('MMM DD, YYYY HH:mm:ss')\r\n            events();\r\n        }, 10000);\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    const events = async () =>{\r\n        var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n        tokenProm = await tokenProm;\r\n    \r\n        const users = await callForUser(tokenProm);\r\n\r\n        const response = await GetEvent(users, instance, accounts);\r\n        setEvent(await response);\r\n    }\r\n\r\n    function handleChange(event){\r\n        setTeam(event.target.value);\r\n    }\r\n\r\n    const [team, setTeam] = useState([\"alle\"]);\r\n    \r\n     return(\r\n        <div>\r\n            <div>\r\n                <form>\r\n                    <label> Vælg Team </label>\r\n                    <select defaultValue={\"alle\"} onChange={handleChange}>\r\n                        <option value=\"Dagpengeteam\" >DP</option>\r\n                        <option value=\"Kontaktcenter\">KT</option>\r\n                        <option value=\"IT-afdelingen\">IT</option>\r\n                        <option value=\"Administrationsafdelingen\">Administration</option>\r\n                        <option value=\"Konsulentteam\">Konsulentteam</option>\r\n                        <option value=\"Forsikringsteamet\">Forsikringsteam</option>\r\n                        <option value=\"Juridisk team\">Juridisk team</option>\r\n                        <option value=\"alle\">Alle</option>\r\n                    </select>\r\n                </form>\r\n            </div>\r\n            <div className=\"grid\">\r\n             {event.map((data, index) => {\r\n                console.log(data);\r\n                if(data[2] !== null){\r\n                    if(typeof data[0][0] === \"object\"){\r\n\r\n                        var today = Moment(data[0][0].start.dateTime).utcOffset(2).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).utcOffset(2).add(30,'minutes').isAfter(Moment().utcOffset(2));\r\n\r\n                        var closeTo = Moment(data[0][0].start.dateTime).utcOffset(2).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).utcOffset(2).isAfter(Moment().utcOffset(2).add(30, 'min'));  \r\n\r\n                        var inSes = Moment(data[0][0].start.dateTime).utcOffset(2).isSame(Moment(), 'day') && (Moment(data[0][0].start.dateTime).utcOffset(2).isSameOrBefore(Moment().utcOffset(2)) && Moment(data[0][0].end.dateTime).utcOffset(2).isAfter(Moment().utcOffset(2))); \r\n\r\n                        var notToday = !Moment(data[0][0].start.dateTime).utcOffset(2).isSame(Moment(), 'day');\r\n                        console.log(data[1] + \" Tid: \" + Moment(data[0][0].start.dateTime).utcOffset(2).isSameOrBefore(Moment().fo) + \" Tiderne: \" +  Moment(data[0][0].start.dateTime).utcOffset(2).format('HH:mm') + \", \" + Moment().format('HH:mm'));\r\n\r\n                        //Der er et møde i dag!\r\n                        if(today){\r\n                            return(\r\n                                <div className=\"personBox today\" id={data[2]} key={index} hidden={data[2] === team || team === \"alle\" ? false : true}>\r\n                                    <div>\r\n                                        <p className=\"list-group-event\">{data[1]}</p>\r\n                                        <p>Møde start klokken: {Moment(data[0][0].start.dateTime).utcOffset(2).format('HH:mm')}</p>\r\n                                        <p>{data[2]}</p>\r\n                                        <br></br>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else if(inSes){\r\n                            return(\r\n                                <div className=\"personBox NA\" id={data[2]} key={index} hidden={data[2] === team || team === \"alle\" ? false : true}>\r\n                                    <div>\r\n                                        <p className=\"list-group-event\">{data[1]}</p>\r\n                                        <p>Møde start klokken: {Moment(data[0][0].start.dateTime).utcOffset(2).format('HH:mm')}</p>\r\n                                        <p>Møde slutter: {Moment(data[0][0].end.dateTime).utcOffset(2).format('HH:mm')}</p>\r\n                                        <br></br>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else if(notToday){\r\n                            return(\r\n                                <div className=\"personBox noEvents\" id={data[2]} key={index} hidden={data[2] === team || team === \"alle\" ? false : true}>\r\n                                    <div>\r\n                                        <p className=\"list-group-event\">{data[1]}</p>\r\n                                        <p>Ingen møder i dag!</p>\r\n                                        <p>{data[2]}</p>\r\n                                        <br></br>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else if(closeTo){\r\n                            return(\r\n                                <div className=\"personBox closeTo\" id={data[2]} key={index} hidden={data[2] === team || team === \"alle\" ? false : true}>\r\n                                    <div>\r\n                                        <p className=\"list-group-event\">{data[1]}</p>\r\n                                        <p>Møde start klokken: {Moment(data[0][0].start.dateTime).utcOffset(2).format('HH:mm')}</p>\r\n                                        <p>{data[2]}</p>\r\n                                        <br></br>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } \r\n                    }else{\r\n                        return(\r\n                            <div className=\"personBox noEvents\" id={data[2]} key={index} hidden={data[2] === team || team === \"alle\" ? false : true}>\r\n                                <div>\r\n                                    <p className=\"list-group-event\">{data[1]}</p>\r\n                                    <p>Ingen møder i dag!</p>\r\n                                    <p>{data[2]}</p>\r\n                                    <br></br>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n                \r\n             })}\r\n             </div>\r\n     </div>\r\n     )\r\n}","C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\GraphCalls.jsx",[],[],"C:\\Users\\ljs\\Desktop\\calendar\\src\\components\\DataCollection\\GetEvent.jsx",["52"],[],"import { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForEvent } from './GraphCalls';\r\n\r\nexport async function GetEvent (data, instance, accounts){\r\n  const request = {\r\n      ...loginRequest,\r\n      account: accounts[0]\r\n  };  \r\n\r\n  var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n  tokenProm = await tokenProm;\r\n\r\n  var usersSorted = data.value.map((user) => {\r\n    if(user.accountEnabled === true && user.userPrincipalName.length < 13 && user.userPrincipalName.length > 10){\r\n      return user\r\n    }\r\n  })\r\n\r\n \r\n\r\n  usersSorted = usersSorted.filter((elem) => {return elem !== undefined})\r\n\r\n\r\n  var events = await Promise.all(usersSorted.map((user) => {\r\n    return callForEvent(tokenProm, user.userPrincipalName).then((res) => {\r\n      if(res.value !== undefined){\r\n        return [res.value, user.displayName, user.department]\r\n      }\r\n      else{\r\n        return [[], user.displayName, user.department]\r\n      }\r\n    })\r\n  }))\r\n\r\n  events = events.filter((elem) => {return elem[0] !== undefined && elem[1] !== \"Jesper Nygaard Nielsen\" && elem[1] !== \"Finn Vedersø\"})\r\n  return events\r\n}\r\n",{"ruleId":"53","severity":1,"message":"54","line":5,"column":9,"nodeType":"55","messageId":"56","endLine":5,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":5,"column":20,"nodeType":"55","messageId":"56","endLine":5,"endColumn":28},{"ruleId":"53","severity":1,"message":"58","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":22},{"ruleId":"53","severity":1,"message":"59","line":18,"column":9,"nodeType":"55","messageId":"56","endLine":18,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":27,"column":20,"nodeType":"62","endLine":27,"endColumn":60},{"ruleId":"63","severity":1,"message":"64","line":67,"column":39,"nodeType":"65","messageId":"66","endLine":67,"endColumn":41},{"ruleId":"63","severity":1,"message":"64","line":13,"column":43,"nodeType":"65","messageId":"66","endLine":13,"endColumn":45},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'MomentTimezone' is defined but never used.","'time' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'time' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]