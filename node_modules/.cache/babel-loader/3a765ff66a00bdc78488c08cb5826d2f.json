{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljs\\\\calendar\\\\src\\\\components\\\\DataCollection\\\\Request.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nimport { useEffect } from \"react\";\nimport Moment from 'moment/moment';\nimport '../../stylesheets/event-box.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [event, setEvent] = useState([]);\n  var time = Moment().format('MMM DD, YYYY HH:mm');\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      events();\n      time = Moment().format('MMM DD, YYYY HH:mm');\n    }, 10000);\n    return () => clearInterval(interval);\n  });\n\n  const events = async () => {\n    var tokenProm = instance.acquireTokenSilent(request).then(async res => {\n      return res.accessToken;\n    });\n    tokenProm = await tokenProm;\n    const users = await callForUser(tokenProm);\n    const response = await GetEvent(users, instance, accounts);\n    setEvent(await response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alt her:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), time, event.map((data, index) => {\n      const NA = Moment(data[0][0].start.dateTime).subtract(30, 'minutes').isBefore(Moment());\n\n      if (data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NA\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-group-event\",\n              children: data[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"M\\xF8de start klokken: \", Moment(data[0][0].start.dateTime).format('HH:mm')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time To: \", Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:mm'))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      }\n\n      if (data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inTime\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-group-event\",\n              children: data[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"M\\xF8de start klokken: \", Moment(data[0][0].start.dateTime).format('HH:mm')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n\n_s(GetUsers, \"LQoQ7b1zMkdt5PHYs+/3G1ev8mw=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["useState","useMsal","loginRequest","callForUser","GetEvent","useEffect","Moment","GetUsers","instance","accounts","event","setEvent","time","format","request","account","interval","setInterval","events","clearInterval","tokenProm","acquireTokenSilent","then","res","accessToken","users","response","map","data","index","NA","start","dateTime","subtract","isBefore","undefined","isSame","to"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Moment from 'moment/moment';\r\nimport '../../stylesheets/event-box.css'\r\n\r\nexport function GetUsers(){        \r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const [event, setEvent] = useState([]);\r\n  \r\n    var time = Moment().format('MMM DD, YYYY HH:mm');\r\n\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n          events();\r\n        time = Moment().format('MMM DD, YYYY HH:mm')\r\n        }, 10000);\r\n        return () => clearInterval(interval);\r\n      });\r\n\r\n    const events = async () =>{\r\n        var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n        tokenProm = await tokenProm;\r\n    \r\n        const users = await callForUser(tokenProm);\r\n\r\n        const response = await GetEvent(users, instance, accounts);\r\n\r\n        setEvent(await response);\r\n    }\r\n     return(\r\n         <div className=\"grid\">\r\n             <h1>Alt her:</h1>\r\n             {time}\r\n             {event.map((data, index) => {\r\n                const NA = Moment(data[0][0].start.dateTime).subtract(30,'minutes').isBefore(Moment())\r\n                if(data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() === false){\r\n                    return(\r\n                        <div key={index}>\r\n                            <div className={\"NA\"}>\r\n                                <p className=\"list-group-event\">{data[1]}</p>\r\n                                {/*<li>Subject: {data[0][0].subject}</li>*/}\r\n                                <p>Møde start klokken: {Moment(data[0][0].start.dateTime).format('HH:mm')}</p>\r\n                                {<p>Time To: {Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:mm'))}</p>}\r\n                                <br></br>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                if(data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() === true){\r\n                    return(\r\n                        <div key={index}>\r\n                    <div className={\"inTime\"}>\r\n                        <p className=\"list-group-event\">{data[1]}</p>\r\n                        {/*<li>Subject: {data[0][0].subject}</li>*/}\r\n                        <p>Møde start klokken: {Moment(data[0][0].start.dateTime).format('HH:mm')}</p>\r\n                        <br></br>\r\n                    </div>\r\n                </div> \r\n                    );\r\n                }     \r\n             })}\r\n     </div>\r\n     )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}