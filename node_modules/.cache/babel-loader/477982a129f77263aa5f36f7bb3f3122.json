{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljs\\\\calendar\\\\src\\\\components\\\\DataCollection\\\\Request.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nimport { useEffect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Moment from 'moment/moment';\nimport '../../stylesheets/event-box.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [event, setEvent] = useState([]);\n  const time = Moment().format('MMM DD, YYYY HH:MM');\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  useEffect(() => {\n    events();\n  }, []);\n\n  const events = async () => {\n    var tokenProm = instance.acquireTokenSilent(request).then(async res => {\n      return res.accessToken;\n    });\n    tokenProm = await tokenProm;\n    const users = await callForUser(tokenProm);\n    const response = await GetEvent(users, instance, accounts);\n    setEvent(await response);\n  };\n\n  return useEffect(() => {\n    const interval = setInterval(() => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Alt her:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), time, event.map((data, index) => {\n          if (data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() == false) {\n            const NA = Moment(data[0][0].start.dateTime).format('DD MMMM YYYY H:mm') < Moment().format('DD MMMM YYYY H:mm');\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NA\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"list-group-event\",\n                  children: data[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"M\\xF8de start klokken: \", Moment(data[0][0].start.dateTime).format('HH:mm')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 36\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Time To: \", Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM'))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 32\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, this);\n          }\n\n          if (data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() == true) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inTime\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"list-group-event\",\n                  children: data[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"M\\xF8de start klokken: \", Moment(data[0][0].start.dateTime).format('HH:mm')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 28\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 24\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 28\n            }, this);\n          }\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n}\n\n_s(GetUsers, \"aOZ5i5pK6ssLiZ3RFg0zTCJlk40=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["useState","useMsal","loginRequest","callForUser","GetEvent","useEffect","Grid","Stack","Moment","GetUsers","instance","accounts","event","setEvent","time","format","request","account","events","tokenProm","acquireTokenSilent","then","res","accessToken","users","response","interval","setInterval","map","data","index","undefined","start","dateTime","isSame","isBefore","NA","to","clearInterval"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\nimport { useEffect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport Moment from 'moment/moment';\r\nimport '../../stylesheets/event-box.css'\r\n\r\nexport function GetUsers(){        \r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const [event, setEvent] = useState([]);\r\n  \r\n    const time = Moment().format('MMM DD, YYYY HH:MM')\r\n\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {\r\n        events()\r\n    },[])\r\n\r\n    const events = async () =>{\r\n        var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n        tokenProm = await tokenProm;\r\n    \r\n        const users = await callForUser(tokenProm);\r\n\r\n        const response = await GetEvent(users, instance, accounts);\r\n\r\n        setEvent(await response);\r\n    }\r\n     return(\r\n        useEffect(() => {\r\n            const interval = setInterval(() => {\r\n                <div className=\"grid\">\r\n                <h1>Alt her:</h1>\r\n                {time}\r\n                {event.map((data, index) => {\r\n                   if(data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() == false){\r\n                   const NA = Moment(data[0][0].start.dateTime).format('DD MMMM YYYY H:mm') < Moment().format('DD MMMM YYYY H:mm');\r\n                       return(\r\n                           <div key={index}>\r\n                               <div className={\"NA\"}>\r\n                                   <p className=\"list-group-event\">{data[1]}</p>\r\n                                   {/*<li>Subject: {data[0][0].subject}</li>*/}\r\n                                   <p>Møde start klokken: {Moment(data[0][0].start.dateTime).format('HH:mm')}</p>\r\n                                   {<p>Time To: {Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM'))}</p>}\r\n                                   <br></br>\r\n                               </div>\r\n                           </div>\r\n                       )\r\n                   }\r\n                   if(data[0][0] !== undefined && Moment(data[0][0].start.dateTime).isSame(Moment(), 'day') && Moment(data[0][0].start.dateTime).isBefore() == true){\r\n                       return(\r\n                           <div key={index}>\r\n                       <div className={\"inTime\"}>\r\n                           <p className=\"list-group-event\">{data[1]}</p>\r\n                           {/*<li>Subject: {data[0][0].subject}</li>*/}\r\n                           <p>Møde start klokken: {Moment(data[0][0].start.dateTime).format('HH:mm')}</p>\r\n                           <br></br>\r\n                       </div>\r\n                   </div> \r\n                       );\r\n                   }     \r\n                })}\r\n        </div>\r\n            }, 1000);\r\n            return () => clearInterval(interval);\r\n          }, [])\r\n     )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}