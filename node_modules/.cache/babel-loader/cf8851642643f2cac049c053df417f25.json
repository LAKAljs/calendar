{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nexport function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [event, setEvent] = useState([]); //console.log(currentUser);\n\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n\n  const events = async () => {\n    const tokenProm = instance.acquireTokenSilent(request).then(async res => {\n      return res.accessToken;\n    });\n    tokenProm = await tokenProm;\n    const users = await callForUser(tokenProm);\n    const response = await GetEvent(users, instance, accounts);\n    setEvent(await response.json);\n  };\n\n  return usersEvents;\n}\n\n_s(GetUsers, \"4QAAAxQiuAt63BMlzuLq4BGGA58=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useMsal","loginRequest","callForUser","GetEvent","GetUsers","instance","accounts","event","setEvent","useState","request","account","events","tokenProm","acquireTokenSilent","then","res","accessToken","users","response","json","usersEvents"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\n\r\nexport function GetUsers(){\r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n    const [event, setEvent] = useState([])\r\n    //console.log(currentUser);\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    const events = async () =>{\r\n        const tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n        tokenProm = await tokenProm;\r\n    \r\n        const users = await callForUser(tokenProm);\r\n\r\n        const response = await GetEvent(users, instance, accounts);\r\n\r\n        setEvent(await response.json);\r\n\r\n\r\n    }\r\n    \r\n    return usersEvents\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,QAAT,GAAmB;EAAA;;EACtB;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAyBN,OAAO,EAAtC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC,CAHsB,CAItB;;EACA,MAAMC,OAAO,GAAG,EACZ,GAAGT,YADS;IAEZU,OAAO,EAAEL,QAAQ,CAAC,CAAD;EAFL,CAAhB;;EAKA,MAAMM,MAAM,GAAG,YAAW;IACtB,MAAMC,SAAS,GAAGR,QAAQ,CAACS,kBAAT,CAA4BJ,OAA5B,EAAqCK,IAArC,CAA0C,MAAOC,GAAP,IAAe;MAAC,OAAOA,GAAG,CAACC,WAAX;IAAuB,CAAjF,CAAlB;IACAJ,SAAS,GAAG,MAAMA,SAAlB;IAEA,MAAMK,KAAK,GAAG,MAAMhB,WAAW,CAACW,SAAD,CAA/B;IAEA,MAAMM,QAAQ,GAAG,MAAMhB,QAAQ,CAACe,KAAD,EAAQb,QAAR,EAAkBC,QAAlB,CAA/B;IAEAE,QAAQ,CAAC,MAAMW,QAAQ,CAACC,IAAhB,CAAR;EAGH,CAXD;;EAaA,OAAOC,WAAP;AACH;;GAxBejB,Q;UAEmBJ,O;;;KAFnBI,Q"},"metadata":{},"sourceType":"module"}