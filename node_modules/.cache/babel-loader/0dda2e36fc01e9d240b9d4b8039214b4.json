{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljs\\\\calendar\\\\src\\\\components\\\\DataCollection\\\\ReqUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport Button from \"react-bootstrap/Button\";\nimport { callForUser, callForEvent } from \"./GraphCalls\";\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction handleLogin(instance) {\n  //Handles login and catches exceptions\n  instance.loginRedirect(loginRequest).catch(e => {\n    console.error(e);\n  });\n}\n\nexport function GetEvent(data, instance, accounts) {\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  data.map(user => {\n    instance.acquireTokenSilent(request).then(res => {\n      callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then(res => {\n        if (res.value === undefined || res === false) {} else {\n          return console.log(res);\n        }\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = GetEvent;\nexport function GetUsers(props) {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  let eventArr = [];\n  const {\n    instance,\n    accounts\n  } = useMsal(); //console.log(currentUser);\n\n  const request = { ...loginRequest,\n    account: accounts[0]\n  }; //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\n\n  instance.acquireTokenSilent(request).then(res => {\n    //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\n    callForUser(res.accessToken).then(res => {\n      //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\n      GetEvent(res.value, instance, accounts).then(res => {\n        eventArr.push(res);\n      }).catch(e => console.log(\"an error has occured\"));\n    });\n  }).catch(e => {\n    //if we cant acquire silently, then we acquire one by popup.\n    instance.acquireTokenPopup(request).then(res => {\n      callForUser(res.accessToken).then(res => {\n        GetEvent(res.value, instance, accounts).then(res => {\n          eventArr.push(res);\n        });\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(GetUsers, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n\n_c2 = GetUsers;\nexport const ReqUsers = () => {\n  _s2();\n\n  //Use Msal (Microsfot Authentication Library.)\n  const {\n    instance\n  } = useMsal();\n  return (\n    /*#__PURE__*/\n    //Button class imported from react-boostrap\n    _jsxDEV(Button, {\n      className: \"ml-auto\",\n      onClick: () => handleLogin(instance),\n      children: \"Sign in using Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s2(ReqUsers, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n\n_c3 = ReqUsers;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetEvent\");\n$RefreshReg$(_c2, \"GetUsers\");\n$RefreshReg$(_c3, \"ReqUsers\");","map":{"version":3,"names":["React","useState","useMsal","loginRequest","Button","callForUser","callForEvent","RenderMeeting","handleLogin","instance","loginRedirect","catch","e","console","error","GetEvent","data","accounts","request","account","map","user","acquireTokenSilent","then","res","accessToken","userPrincipalName","accountEnabled","value","undefined","log","GetUsers","props","eventArr","push","acquireTokenPopup","ReqUsers"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/ReqUsers.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { callForUser, callForEvent } from \"./GraphCalls\"\r\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\r\n\r\nfunction handleLogin(instance) {\r\n    //Handles login and catches exceptions\r\n    instance.loginRedirect(loginRequest).catch(e => {\r\n        console.error(e);\r\n    });\r\n}\r\n\r\nexport function GetEvent(data, instance, accounts){\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };  \r\n\r\n        data.map((user) => {\r\n        instance.acquireTokenSilent(request).then((res) => {\r\n                callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then((res) => {\r\n                    if(res.value === undefined || res === false){\r\n                    } else{\r\n                        return(\r\n                            console.log(res)\r\n                        )\r\n                    }\r\n                })\r\n            })\r\n        })\r\n\r\n        return(\r\n            <>\r\n            <h1></h1>\r\n            </>\r\n            )\r\n\r\n    }\r\n\r\nexport function GetUsers(props){\r\n    //creates an object with instance and accounts that are authenticated.\r\n    let eventArr = [];\r\n    const { instance, accounts } = useMsal();\r\n    //console.log(currentUser);\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n    //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\r\n    instance.acquireTokenSilent(request).then((res) => { //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\r\n        callForUser(res.accessToken).then((res) => { //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\r\n            GetEvent(res.value, instance, accounts).then((res) => {\r\n                eventArr.push(res);\r\n            })\r\n            .catch((e) => console.log(\"an error has occured\"));\r\n        })\r\n    }).catch((e) =>{\r\n    //if we cant acquire silently, then we acquire one by popup.\r\n    instance.acquireTokenPopup(request).then((res) => {\r\n        callForUser(res.accessToken).then((res) => {\r\n            GetEvent(res.value, instance, accounts).then((res) => {\r\n                eventArr.push(res);\r\n            });\r\n        })\r\n    })\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <h1>{accounts}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReqUsers = () => {\r\n    //Use Msal (Microsfot Authentication Library.)\r\n    const { instance } = useMsal();\r\n    return (\r\n        //Button class imported from react-boostrap\r\n        <Button className=\"ml-auto\" onClick={() => handleLogin(instance)}>Sign in using Redirect</Button>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}