{"ast":null,"code":"var _jsxFileName = \"/Users/lucassjostrommacbook/collected-calendar-build/src/components/DataCollection/ReqUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport Button from \"react-bootstrap/Button\";\nimport { callForUser, callForEvent } from \"./GraphCalls\";\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction handleLogin(instance) {\n  //Handles login and catches exceptions\n  instance.loginRedirect(loginRequest).catch(e => {\n    console.error(e);\n  });\n}\n\nexport function GetUsers() {\n  _s();\n\n  const {\n    instance,\n    accounts\n  } = useMsal();\n\n  function CallUser() {\n    const request = { ...loginRequest,\n      account: accounts[0]\n    };\n    instance.acquireTokenSilent(request).then(res => {\n      callForUser(res.accessToken).then(res => {\n        getEvent(res.value);\n      });\n    }).catch(e => {\n      instance.acquireTokenPopup(request).then(res => {\n        callForUser(res.accessToken).then(res => {\n          getEvent(res.value);\n        });\n      });\n    });\n  }\n\n  function getEvent(data) {\n    const request = { ...loginRequest,\n      account: accounts[0]\n    };\n    data.map(user => {\n      instance.acquireTokenSilent(request).then(res => {\n        callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then(res => {\n          if (res.value === undefined || res === false) {} else {\n            console.log(user.displayName + \" #\" + user.userPrincipalName + \" | \" + (res === null || res === void 0 ? void 0 : res.value[0].subject) + \" _ \" + (res === null || res === void 0 ? void 0 : res.value[1].subject));\n            console.log(res.value[0]);\n            return /*#__PURE__*/_jsxDEV(RenderMeeting, {\n              name: \"hej1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this);\n          }\n        });\n      });\n    });\n  }\n  /*\n          instance.acquireTokenSilent(request).then((res) => {\n                  callForEvent(res.accessToken, data.value).then((dat) => {\n                      if(dat === 'The user is undefined'){\n                          console.log(dat)\n                          CallUser();\n                      }\n                      else {\n                          console.log(dat)\n                      }\n                  })\n          }).catch((e) => {\n          instance.acquireTokenPopup(request).then((res) => {\n              callForEvent(res.accessToken, data.value).then((res) => {console.log(res)})\n          })\n          }) */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [CallUser(), /*#__PURE__*/_jsxDEV(\"data\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GetUsers, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\nexport const ReqUsers = () => {\n  _s2();\n\n  //Bruger Msal (Microsfot Authentication Library.)\n  const {\n    instance\n  } = useMsal();\n  return (\n    /*#__PURE__*/\n    //Button class imported from react-boostrap\n    _jsxDEV(Button, {\n      className: \"ml-auto\",\n      onClick: () => handleLogin(instance),\n      children: \"Sign in using Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s2(ReqUsers, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n\n_c2 = ReqUsers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetUsers\");\n$RefreshReg$(_c2, \"ReqUsers\");","map":{"version":3,"names":["React","useMsal","loginRequest","Button","callForUser","callForEvent","RenderMeeting","handleLogin","instance","loginRedirect","catch","e","console","error","GetUsers","accounts","CallUser","request","account","acquireTokenSilent","then","res","accessToken","getEvent","value","acquireTokenPopup","data","map","user","userPrincipalName","accountEnabled","undefined","log","displayName","subject","ReqUsers"],"sources":["/Users/lucassjostrommacbook/collected-calendar-build/src/components/DataCollection/ReqUsers.jsx"],"sourcesContent":["import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\nimport Button from \"react-bootstrap/Button\"\nimport { callForUser, callForEvent } from \"./GraphCalls\"\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\n\nfunction handleLogin(instance) {\n    //Handles login and catches exceptions\n    instance.loginRedirect(loginRequest).catch(e => {\n        console.error(e);\n    });\n}\n\nexport function GetUsers(){\n    const { instance, accounts } = useMsal();\n\n    function CallUser(){\n        const request = {\n            ...loginRequest,\n            account: accounts[0]\n        };\n    \n        instance.acquireTokenSilent(request).then((res) => {\n            callForUser(res.accessToken).then((res) => {\n                getEvent(res.value)\n            })\n        }).catch((e) =>{\n        instance.acquireTokenPopup(request).then((res) => {\n            callForUser(res.accessToken).then((res) => {\n                getEvent(res.value);\n            })\n        })\n        })\n    }\n\n    function getEvent(data){\n        const request = {\n            ...loginRequest,\n            account: accounts[0]\n        };\n        data.map((user) => {\n            instance.acquireTokenSilent(request).then((res) => {\n                    callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then((res) => {\n                        if(res.value === undefined || res === false){\n                        } else{\n                            console.log(user.displayName + \" #\" + user.userPrincipalName + \" | \" + res?.value[0].subject + \" _ \" + res?.value[1].subject)\n                            console.log(res.value[0])\n                            return(\n                                <RenderMeeting name='hej1'/>\n                            )\n                        }\n                    })\n                })\n            })\n        }\n\n/*\n        instance.acquireTokenSilent(request).then((res) => {\n                callForEvent(res.accessToken, data.value).then((dat) => {\n                    if(dat === 'The user is undefined'){\n                        console.log(dat)\n                        CallUser();\n                    }\n                    else {\n                        console.log(dat)\n                    }\n                })\n        }).catch((e) => {\n        instance.acquireTokenPopup(request).then((res) => {\n            callForEvent(res.accessToken, data.value).then((res) => {console.log(res)})\n        })\n        }) */\n\n        return(\n            <>\n              {CallUser()}\n              <data />\n            </>\n        )\n}\n\n\n\n\n\nexport const ReqUsers = () => {\n    //Bruger Msal (Microsfot Authentication Library.)\n    const { instance } = useMsal();\n    return (\n        //Button class imported from react-boostrap\n        <Button className=\"ml-auto\" onClick={() => handleLogin(instance)}>Sign in using Redirect</Button>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}