{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ljs\\\\calendar\\\\src\\\\components\\\\DataCollection\\\\Request.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nimport { useEffect } from \"react\";\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Moment from 'moment/moment';\nimport '../../stylesheets/event-box.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [event, setEvent] = useState([]);\n  const time = Moment().format('LLL');\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  useEffect(() => {\n    events();\n  }, []);\n\n  const events = async () => {\n    var tokenProm = instance.acquireTokenSilent(request).then(async res => {\n      return res.accessToken;\n    });\n    tokenProm = await tokenProm;\n    const users = await callForUser(tokenProm);\n    const response = await GetEvent(users, instance, accounts);\n    setEvent(await response);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alt her:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), time, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columns: {\n        xs: 4,\n        sm: 8\n      },\n      children: event.map(data => {\n        if (data[0][0] !== undefined) {\n          const NA = Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM')) <= Moment().to(Moment(data[0][0].start.dateTime).subtract(30, 'minutes').format('DD MMMM YYYY HH:MM'));\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"item\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: NA ? \"inTime\" : \"NA\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-event\",\n                  children: [\"Name: \", data[1]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Subject: \", data[0][0].subject]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Time: \", Moment(data[0][0].start.dateTime).format('HH:MM')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Time To: \", Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM'))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)]\n              }, data[1], true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n\n_s(GetUsers, \"LQoQ7b1zMkdt5PHYs+/3G1ev8mw=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["useState","useMsal","loginRequest","callForUser","GetEvent","useEffect","Grid","Stack","Moment","GetUsers","instance","accounts","event","setEvent","time","format","request","account","events","tokenProm","acquireTokenSilent","then","res","accessToken","users","response","xs","sm","map","data","undefined","NA","to","start","dateTime","subtract","subject"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\nimport { useEffect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport Moment from 'moment/moment';\r\nimport '../../stylesheets/event-box.css'\r\n\r\nexport function GetUsers(){        \r\n\r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n\r\n    const [event, setEvent] = useState([]);\r\n  \r\n    const time = Moment().format('LLL')\r\n\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    useEffect(() => {\r\n        events()\r\n    },[])\r\n\r\n    const events = async () =>{\r\n        var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n        tokenProm = await tokenProm;\r\n    \r\n        const users = await callForUser(tokenProm);\r\n\r\n        const response = await GetEvent(users, instance, accounts);\r\n\r\n        setEvent(await response);\r\n    }\r\n\r\n\r\n     return(\r\n         <div>\r\n             <h1>Alt her:</h1>\r\n             {time}\r\n             <Grid container columns={{xs: 4, sm: 8}}>\r\n             {event.map((data) => {\r\n                if(data[0][0] !== undefined){\r\n                const NA = Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM')) <= Moment().to(Moment(data[0][0].start.dateTime).subtract(30, 'minutes').format('DD MMMM YYYY HH:MM'));\r\n                    return(\r\n                        <Grid item>\r\n                            <item>\r\n                                <div className={NA ? \"inTime\" : \"NA\"} key={data[1]}>\r\n                                    <li className=\"list-group-event\">Name: {data[1]}</li>\r\n                                    <li>Subject: {data[0][0].subject}</li>\r\n                                    <li>Time: {Moment(data[0][0].start.dateTime).format('HH:MM')}</li>\r\n                                    <li>Time To: {Moment().to(Moment(data[0][0].start.dateTime).format('DD MMMM YYYY HH:MM'))}</li>\r\n                                    <br></br>\r\n                                </div>\r\n                            </item>\r\n                        </Grid>\r\n                    )\r\n                }     \r\n             })}\r\n            </Grid>\r\n     </div>\r\n     )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}