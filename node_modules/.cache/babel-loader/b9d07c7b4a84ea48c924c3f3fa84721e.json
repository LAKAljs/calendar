{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ljs/Desktop/calendar/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"C:/Users/ljs/Desktop/calendar/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"C:/Users/ljs/Desktop/calendar/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{loginRequest}from'../../AuthenticationFolder/authConfig';import{callForEvent}from'./GraphCalls';export function GetEvent(_x,_x2,_x3){return _GetEvent.apply(this,arguments);}function _GetEvent(){_GetEvent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data,instance,accounts){var request,tokenProm,usersSorted,events,bannedNames;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:request=_objectSpread(_objectSpread({},loginRequest),{},{account:accounts[0]});tokenProm=instance.acquireTokenSilent(request).then(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(res){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",res.accessToken);case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x4){return _ref.apply(this,arguments);};}());_context2.next=4;return tokenProm;case 4:tokenProm=_context2.sent;usersSorted=data.value.map(function(user){if(user.accountEnabled===true&&user.userPrincipalName.length<13&&user.userPrincipalName.length>10){return user;}});usersSorted=usersSorted.filter(function(elem){return elem!==undefined;});_context2.next=9;return Promise.all(usersSorted.map(function(user){return callForEvent(tokenProm,user.userPrincipalName).then(function(res){if(res.value!==undefined){return[res.value,user.displayName,user.department];}else{return[[],user.displayName,user.department];}});}));case 9:events=_context2.sent;bannedNames=[\"Jesper Nygaard Nielsen\",\"Finn Vedersø\",\"Scan-k32\",\"Scan-reception\",\"Scan-Risskov\",\"Økonomiafdelingen - Indbakke\"];events=events.filter(function(elem){return!bannedNames.includes(elem[1]);});return _context2.abrupt(\"return\",events);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return _GetEvent.apply(this,arguments);}","map":{"version":3,"names":["loginRequest","callForEvent","GetEvent","data","instance","accounts","request","account","tokenProm","acquireTokenSilent","then","res","accessToken","usersSorted","value","map","user","accountEnabled","userPrincipalName","length","filter","elem","undefined","Promise","all","displayName","department","events","bannedNames","includes"],"sources":["C:/Users/ljs/Desktop/calendar/src/components/DataCollection/GetEvent.jsx"],"sourcesContent":["import { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForEvent } from './GraphCalls';\r\n\r\nexport async function GetEvent (data, instance, accounts){\r\n  const request = {\r\n      ...loginRequest,\r\n      account: accounts[0]\r\n  };  \r\n\r\n  var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n  tokenProm = await tokenProm;\r\n\r\n  var usersSorted = data.value.map((user) => {\r\n    if(user.accountEnabled === true && user.userPrincipalName.length < 13 && user.userPrincipalName.length > 10){\r\n      return user\r\n    }\r\n  })\r\n\r\n \r\n\r\n  usersSorted = usersSorted.filter((elem) => {return elem !== undefined})\r\n\r\n\r\n  var events = await Promise.all(usersSorted.map((user) => {\r\n    return callForEvent(tokenProm, user.userPrincipalName).then((res) => {\r\n      if(res.value !== undefined){\r\n        return [res.value, user.displayName, user.department]\r\n      }\r\n      else{\r\n        return [[], user.displayName, user.department]\r\n      }\r\n    })\r\n  }))\r\n\r\n  var bannedNames = [\"Jesper Nygaard Nielsen\", \"Finn Vedersø\", \"Scan-k32\", \"Scan-reception\", \"Scan-Risskov\", \"Økonomiafdelingen - Indbakke\"]\r\n\r\n  events = events.filter((elem) => {return !bannedNames.includes(elem[1])})\r\n  return events\r\n}\r\n"],"mappings":"wWAAA,OAASA,YAAT,KAA6B,uCAA7B,CACA,OAASC,YAAT,KAA6B,cAA7B,CAEA,eAAsBC,SAAtB,qD,yFAAO,kBAAyBC,IAAzB,CAA+BC,QAA/B,CAAyCC,QAAzC,6KACCC,OADD,gCAEEN,YAFF,MAGDO,OAAO,CAAEF,QAAQ,CAAC,CAAD,CAHhB,GAMDG,SANC,CAMWJ,QAAQ,CAACK,kBAAT,CAA4BH,OAA5B,EAAqCI,IAArC,4FAA0C,iBAAOC,GAAP,oJAAuBA,GAAG,CAACC,WAA3B,wDAA1C,gEANX,wBAOaJ,UAPb,QAOLA,SAPK,gBASDK,WATC,CASaV,IAAI,CAACW,KAAL,CAAWC,GAAX,CAAe,SAACC,IAAD,CAAU,CACzC,GAAGA,IAAI,CAACC,cAAL,GAAwB,IAAxB,EAAgCD,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,CAAgC,EAAhE,EAAsEH,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,CAAgC,EAAzG,CAA4G,CAC1G,MAAOH,KAAP,CACD,CACF,CAJiB,CATb,CAiBLH,WAAW,CAAGA,WAAW,CAACO,MAAZ,CAAmB,SAACC,IAAD,CAAU,CAAC,MAAOA,KAAI,GAAKC,SAAhB,CAA0B,CAAxD,CAAd,CAjBK,uBAoBcC,QAAO,CAACC,GAAR,CAAYX,WAAW,CAACE,GAAZ,CAAgB,SAACC,IAAD,CAAU,CACvD,MAAOf,aAAY,CAACO,SAAD,CAAYQ,IAAI,CAACE,iBAAjB,CAAZ,CAAgDR,IAAhD,CAAqD,SAACC,GAAD,CAAS,CACnE,GAAGA,GAAG,CAACG,KAAJ,GAAcQ,SAAjB,CAA2B,CACzB,MAAO,CAACX,GAAG,CAACG,KAAL,CAAYE,IAAI,CAACS,WAAjB,CAA8BT,IAAI,CAACU,UAAnC,CAAP,CACD,CAFD,IAGI,CACF,MAAO,CAAC,EAAD,CAAKV,IAAI,CAACS,WAAV,CAAuBT,IAAI,CAACU,UAA5B,CAAP,CACD,CACF,CAPM,CAAP,CAQD,CAT8B,CAAZ,CApBd,QAoBDC,MApBC,gBA+BDC,WA/BC,CA+Ba,CAAC,wBAAD,CAA2B,cAA3B,CAA2C,UAA3C,CAAuD,gBAAvD,CAAyE,cAAzE,CAAyF,8BAAzF,CA/Bb,CAiCLD,MAAM,CAAGA,MAAM,CAACP,MAAP,CAAc,SAACC,IAAD,CAAU,CAAC,MAAO,CAACO,WAAW,CAACC,QAAZ,CAAqBR,IAAI,CAAC,CAAD,CAAzB,CAAR,CAAsC,CAA/D,CAAT,CAjCK,iCAkCEM,MAlCF,2D"},"metadata":{},"sourceType":"module"}