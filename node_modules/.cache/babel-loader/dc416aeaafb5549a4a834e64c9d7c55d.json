{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ljs/Desktop/calendar/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/ljs/Desktop/calendar/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import Moment from'moment/moment';// exports a function that takes an access token as argument.\nexport function callForUser(_x){return _callForUser.apply(this,arguments);}// exports funciton that takes an acess token, a user and the accountEnabled bool. \nfunction _callForUser(){_callForUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(accessToken){var headers,bearer,options,endpoint;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://calls an api with the header and method of call attached:\nheaders=new Headers();bearer=\"bearer \".concat(accessToken);headers.append(\"Authorization\",bearer);options={method:\"GET\",headers:headers};//endpoint points to, users ordered by name, and returns each user with accountEnabled, start, end, name, email as elements within the objects.\nendpoint=\"https://graph.microsoft.com/v1.0/users?$orderby=displayName&$select=accountEnabled,start,end,displayName,userPrincipalName,department&$top=999\";//returns the api response\nreturn _context.abrupt(\"return\",fetch(endpoint,options).then(function(response){return response.json();}).catch(function(error){return console.log(error);}));case 6:case\"end\":return _context.stop();}}},_callee);}));return _callForUser.apply(this,arguments);}export function callForEvent(_x2,_x3){return _callForEvent.apply(this,arguments);}function _callForEvent(){_callForEvent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(accessToken,user){var headers,bearer,startTime,endTime,options,endpoint;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:headers=new Headers();bearer=\"bearer \".concat(accessToken);headers.append(\"Authorization\",bearer);startTime=Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD')+\"T01:00:00\";endTime=Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD')+\"T23:50:00\";options={method:\"GET\",headers:headers};endpoint=\"https://graph.microsoft.com/v1.0/users/\".concat(user,\"/calendarview?startdatetime=\").concat(startTime,\"&enddatetime=\").concat(endTime,\"&$top=10\");return _context2.abrupt(\"return\",fetch(endpoint,options,user).then(function(response){return response.json();}));case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _callForEvent.apply(this,arguments);}","map":{"version":3,"names":["Moment","callForUser","accessToken","headers","Headers","bearer","append","options","method","endpoint","fetch","then","response","json","catch","error","console","log","callForEvent","user","startTime","tz","format","endTime"],"sources":["C:/Users/ljs/Desktop/calendar/src/components/DataCollection/GraphCalls.jsx"],"sourcesContent":["import Moment from 'moment/moment';\r\n// exports a function that takes an access token as argument.\r\nexport async function callForUser(accessToken){\r\n    //calls an api with the header and method of call attached:\r\n    const headers = new Headers();\r\n    const bearer = `bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n    //endpoint points to, users ordered by name, and returns each user with accountEnabled, start, end, name, email as elements within the objects.\r\n    const endpoint = \"https://graph.microsoft.com/v1.0/users?$orderby=displayName&$select=accountEnabled,start,end,displayName,userPrincipalName,department&$top=999\";\r\n    \r\n    //returns the api response\r\n    return fetch(endpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error))\r\n}\r\n\r\n// exports funciton that takes an acess token, a user and the accountEnabled bool. \r\nexport async function callForEvent(accessToken, user){\r\n    const headers = new Headers();\r\n    const bearer = `bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n    const startTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD') + \"T01:00:00\";\r\n    const endTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD') + \"T23:50:00\";\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n\r\n    const endpoint = `https://graph.microsoft.com/v1.0/users/${user}/calendarview?startdatetime=${startTime}&enddatetime=${endTime}&$top=10`;\r\n    return fetch(endpoint, options, user)\r\n    .then(response => {return response.json()});\r\n    }\r\n"],"mappings":"sPAAA,MAAOA,OAAP,KAAmB,eAAnB,CACA;AACA,eAAsBC,YAAtB,gDAmBA;+FAnBO,iBAA2BC,WAA3B,wJACH;AACMC,OAFH,CAEa,GAAIC,QAAJ,EAFb,CAGGC,MAHH,kBAGsBH,WAHtB,EAIHC,OAAO,CAACG,MAAR,CAAe,eAAf,CAAgCD,MAAhC,EAEME,OANH,CAMa,CACZC,MAAM,CAAE,KADI,CAEZL,OAAO,CAAEA,OAFG,CANb,CAUH;AACMM,QAXH,CAWc,gJAXd,CAaH;AAbG,gCAcIC,KAAK,CAACD,QAAD,CAAWF,OAAX,CAAL,CACFI,IADE,CACG,SAAAC,QAAQ,QAAIA,SAAQ,CAACC,IAAT,EAAJ,EADX,EAEFC,KAFE,CAEI,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ,EAFT,CAdJ,wD,8CAoBP,eAAsBG,aAAtB,sD,iGAAO,kBAA4BhB,WAA5B,CAAyCiB,IAAzC,8KACGhB,OADH,CACa,GAAIC,QAAJ,EADb,CAEGC,MAFH,kBAEsBH,WAFtB,EAGHC,OAAO,CAACG,MAAR,CAAe,eAAf,CAAgCD,MAAhC,EACMe,SAJH,CAIepB,MAAM,GAAGqB,EAAT,CAAY,mBAAZ,EAAiCC,MAAjC,CAAwC,YAAxC,EAAwD,WAJvE,CAKGC,OALH,CAKavB,MAAM,GAAGqB,EAAT,CAAY,mBAAZ,EAAiCC,MAAjC,CAAwC,YAAxC,EAAwD,WALrE,CAOGf,OAPH,CAOa,CACZC,MAAM,CAAE,KADI,CAEZL,OAAO,CAAEA,OAFG,CAPb,CAYGM,QAZH,kDAYwDU,IAZxD,wCAY2FC,SAZ3F,yBAYoHG,OAZpH,8CAaIb,KAAK,CAACD,QAAD,CAAWF,OAAX,CAAoBY,IAApB,CAAL,CACNR,IADM,CACD,SAAAC,QAAQ,CAAI,CAAC,MAAOA,SAAQ,CAACC,IAAT,EAAP,CAAuB,CADnC,CAbJ,0D"},"metadata":{},"sourceType":"module"}