{"ast":null,"code":"import Moment from 'moment/moment'; // exports a function that takes an access token as argument.\n\nexport async function callForUser(accessToken) {\n  //calls an api with the header and method of call attached:\n  const headers = new Headers();\n  const bearer = `bearer ${accessToken}`;\n  headers.append(\"Authorization\", bearer);\n  const options = {\n    method: \"GET\",\n    headers: headers\n  }; //endpoint points to, users ordered by name, and returns each user with accountEnabled, start, end, name, email as elements within the objects.\n\n  const endpoint = \"https://graph.microsoft.com/v1.0/users?$orderby=displayName&$select=accountEnabled,start,end,displayName,userPrincipalName,department&$top=999\"; //returns the api response\n\n  return fetch(endpoint, options).then(response => response.json()).catch(error => console.log(error));\n} // exports funciton that takes an acess token, a user and the accountEnabled bool. \n\nexport async function callForEvent(accessToken, user) {\n  const headers = new Headers();\n  const bearer = `bearer ${accessToken}`;\n  headers.append(\"Authorization\", bearer);\n  const startTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DDTHH:MM:ss');\n  const endTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD') + \"T23:50:00\"; //console.log(startTime + \", -- , \" + endTime);\n  //console.log(Moment().format('YYYY-MM-DD'))\n\n  const options = {\n    method: \"GET\",\n    headers: headers\n  };\n  const endpoint = `https://graph.microsoft.com/v1.0/users/${user}/calendarview?startdatetime=${startTime}&enddatetime=${endTime}&$top=1`;\n  return fetch(endpoint, options, user).then(response => {\n    return response.json();\n  });\n}","map":{"version":3,"names":["Moment","callForUser","accessToken","headers","Headers","bearer","append","options","method","endpoint","fetch","then","response","json","catch","error","console","log","callForEvent","user","startTime","tz","format","endTime"],"sources":["C:/Users/ljs/Desktop/calendar/src/components/DataCollection/GraphCalls.jsx"],"sourcesContent":["import Moment from 'moment/moment';\r\n// exports a function that takes an access token as argument.\r\nexport async function callForUser(accessToken){\r\n    //calls an api with the header and method of call attached:\r\n    const headers = new Headers();\r\n    const bearer = `bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n    //endpoint points to, users ordered by name, and returns each user with accountEnabled, start, end, name, email as elements within the objects.\r\n    const endpoint = \"https://graph.microsoft.com/v1.0/users?$orderby=displayName&$select=accountEnabled,start,end,displayName,userPrincipalName,department&$top=999\";\r\n    \r\n    //returns the api response\r\n    return fetch(endpoint, options)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error))\r\n}\r\n\r\n// exports funciton that takes an acess token, a user and the accountEnabled bool. \r\nexport async function callForEvent(accessToken, user){\r\n    const headers = new Headers();\r\n    const bearer = `bearer ${accessToken}`;\r\n    headers.append(\"Authorization\", bearer);\r\n    const startTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DDTHH:MM:ss');\r\n    const endTime = Moment().tz('Europe/Copenhagen').format('YYYY-MM-DD') + \"T23:50:00\";\r\n    \r\n    //console.log(startTime + \", -- , \" + endTime);\r\n    //console.log(Moment().format('YYYY-MM-DD'))\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: headers\r\n    };\r\n\r\n    const endpoint = `https://graph.microsoft.com/v1.0/users/${user}/calendarview?startdatetime=${startTime}&enddatetime=${endTime}&$top=1`;\r\n    return fetch(endpoint, options, user)\r\n    .then(response => {return response.json()});\r\n    }\r\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB,C,CACA;;AACA,OAAO,eAAeC,WAAf,CAA2BC,WAA3B,EAAuC;EAC1C;EACA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;EACA,MAAMC,MAAM,GAAI,UAASH,WAAY,EAArC;EACAC,OAAO,CAACG,MAAR,CAAe,eAAf,EAAgCD,MAAhC;EAEA,MAAME,OAAO,GAAG;IACZC,MAAM,EAAE,KADI;IAEZL,OAAO,EAAEA;EAFG,CAAhB,CAN0C,CAU1C;;EACA,MAAMM,QAAQ,GAAG,gJAAjB,CAX0C,CAa1C;;EACA,OAAOC,KAAK,CAACD,QAAD,EAAWF,OAAX,CAAL,CACFI,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFC,KAFE,CAEIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFb,CAAP;AAGH,C,CAED;;AACA,OAAO,eAAeG,YAAf,CAA4BhB,WAA5B,EAAyCiB,IAAzC,EAA8C;EACjD,MAAMhB,OAAO,GAAG,IAAIC,OAAJ,EAAhB;EACA,MAAMC,MAAM,GAAI,UAASH,WAAY,EAArC;EACAC,OAAO,CAACG,MAAR,CAAe,eAAf,EAAgCD,MAAhC;EACA,MAAMe,SAAS,GAAGpB,MAAM,GAAGqB,EAAT,CAAY,mBAAZ,EAAiCC,MAAjC,CAAwC,qBAAxC,CAAlB;EACA,MAAMC,OAAO,GAAGvB,MAAM,GAAGqB,EAAT,CAAY,mBAAZ,EAAiCC,MAAjC,CAAwC,YAAxC,IAAwD,WAAxE,CALiD,CAOjD;EACA;;EAEA,MAAMf,OAAO,GAAG;IACZC,MAAM,EAAE,KADI;IAEZL,OAAO,EAAEA;EAFG,CAAhB;EAKA,MAAMM,QAAQ,GAAI,0CAAyCU,IAAK,+BAA8BC,SAAU,gBAAeG,OAAQ,SAA/H;EACA,OAAOb,KAAK,CAACD,QAAD,EAAWF,OAAX,EAAoBY,IAApB,CAAL,CACNR,IADM,CACDC,QAAQ,IAAI;IAAC,OAAOA,QAAQ,CAACC,IAAT,EAAP;EAAuB,CADnC,CAAP;AAEC"},"metadata":{},"sourceType":"module"}