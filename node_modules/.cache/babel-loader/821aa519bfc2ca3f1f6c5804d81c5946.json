{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nexport async function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal(); //console.log(currentUser);\n\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  var tokenProm = instance.acquireTokenSilent(request).then(async res => {\n    return res.accessToken;\n  });\n  tokenProm = await tokenProm;\n  var usersEvents = await callForUser(tokenProm).then(res => {\n    return GetEvent(res.value, instance, accounts);\n  });\n  return usersEvents;\n  /* //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\r\n  instance.acquireTokenSilent(request).then((res) => { //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\r\n      callForUser(res.accessToken).then(async (res) => { //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\r\n         return await GetEvent(res.value, instance, accounts)\r\n      })\r\n  }).catch((e) =>{\r\n  //if we cant acquire silently, then we acquire one by popup.\r\n  console.log('popup')\r\n  instance.acquireTokenPopup(request).then((res) => {\r\n      callForUser(res.accessToken).then((res) => {\r\n          console.log(GetEvent(res.value, instance, accounts).ok)\r\n      })\r\n  })\r\n  }) */\n}\n\n_s(GetUsers, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useMsal","loginRequest","callForUser","GetEvent","GetUsers","instance","accounts","request","account","tokenProm","acquireTokenSilent","then","res","accessToken","usersEvents","value"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\n\r\nexport async function GetUsers(){\r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n    //console.log(currentUser);\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n\r\n    var tokenProm = instance.acquireTokenSilent(request).then(async (res) => {return res.accessToken});\r\n    tokenProm = await tokenProm;\r\n\r\n    var usersEvents = await callForUser(tokenProm).then((res) => {\r\n        return GetEvent(res.value, instance, accounts)\r\n    })\r\n    \r\n    return usersEvents\r\n\r\n    /* //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\r\n    instance.acquireTokenSilent(request).then((res) => { //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\r\n        callForUser(res.accessToken).then(async (res) => { //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\r\n           return await GetEvent(res.value, instance, accounts)\r\n        })\r\n    }).catch((e) =>{\r\n    //if we cant acquire silently, then we acquire one by popup.\r\n    console.log('popup')\r\n    instance.acquireTokenPopup(request).then((res) => {\r\n        callForUser(res.accessToken).then((res) => {\r\n            console.log(GetEvent(res.value, instance, accounts).ok)\r\n        })\r\n    })\r\n    }) */\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,eAAeC,QAAf,GAAyB;EAAA;;EAC5B;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAyBN,OAAO,EAAtC,CAF4B,CAG5B;;EACA,MAAMO,OAAO,GAAG,EACZ,GAAGN,YADS;IAEZO,OAAO,EAAEF,QAAQ,CAAC,CAAD;EAFL,CAAhB;EAKA,IAAIG,SAAS,GAAGJ,QAAQ,CAACK,kBAAT,CAA4BH,OAA5B,EAAqCI,IAArC,CAA0C,MAAOC,GAAP,IAAe;IAAC,OAAOA,GAAG,CAACC,WAAX;EAAuB,CAAjF,CAAhB;EACAJ,SAAS,GAAG,MAAMA,SAAlB;EAEA,IAAIK,WAAW,GAAG,MAAMZ,WAAW,CAACO,SAAD,CAAX,CAAuBE,IAAvB,CAA6BC,GAAD,IAAS;IACzD,OAAOT,QAAQ,CAACS,GAAG,CAACG,KAAL,EAAYV,QAAZ,EAAsBC,QAAtB,CAAf;EACH,CAFuB,CAAxB;EAIA,OAAOQ,WAAP;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;GAhCqBV,Q;UAEaJ,O;;;KAFbI,Q"},"metadata":{},"sourceType":"module"}