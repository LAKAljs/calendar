{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForUser } from \"./GraphCalls\";\nimport { GetEvent } from \"./GetEvent\";\nexport function GetUsers() {\n  _s();\n\n  //creates an object with instance and accounts that are authenticated.\n  const {\n    instance,\n    accounts\n  } = useMsal(); //console.log(currentUser);\n\n  const request = { ...loginRequest,\n    account: accounts[0]\n  }; //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\n\n  instance.acquireTokenSilent(request).then(res => {\n    //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\n    callForUser(res.accessToken).then(async res => {\n      //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\n      return console.log(await GetEvent(res.value, instance, accounts));\n    });\n  }).catch(e => {\n    //if we cant acquire silently, then we acquire one by popup.\n    console.log('popup');\n    instance.acquireTokenPopup(request).then(res => {\n      callForUser(res.accessToken).then(res => {\n        console.log(GetEvent(res.value, instance, accounts).ok);\n      });\n    });\n  });\n}\n\n_s(GetUsers, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","useMsal","loginRequest","callForUser","GetEvent","GetUsers","instance","accounts","request","account","acquireTokenSilent","then","res","accessToken","console","log","value","catch","e","acquireTokenPopup","ok"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/Request.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForUser } from \"./GraphCalls\"\r\nimport { GetEvent } from \"./GetEvent\";\r\n\r\nexport function GetUsers(){\r\n    //creates an object with instance and accounts that are authenticated.\r\n    const { instance, accounts } = useMsal();\r\n    //console.log(currentUser);\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };\r\n    //uses instance to acquire an access token, and takes out request, and reponds with an access token if one is available.\r\n    instance.acquireTokenSilent(request).then((res) => { //Pass the response into an arrow function that calls the callForUser-function and passes the accesstoken as an argument.\r\n        callForUser(res.accessToken).then(async (res) => { //Pass the reponse from callForUsers into an arrow functio and passes the response, instance and account as arguments.\r\n           return console.log( await GetEvent(res.value, instance, accounts))\r\n        })\r\n    }).catch((e) =>{\r\n    //if we cant acquire silently, then we acquire one by popup.\r\n    console.log('popup')\r\n    instance.acquireTokenPopup(request).then((res) => {\r\n        callForUser(res.accessToken).then((res) => {\r\n            console.log(GetEvent(res.value, instance, accounts).ok)\r\n        })\r\n    })\r\n    })\r\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,QAAT,GAAmB;EAAA;;EACtB;EACA,MAAM;IAAEC,QAAF;IAAYC;EAAZ,IAAyBN,OAAO,EAAtC,CAFsB,CAGtB;;EACA,MAAMO,OAAO,GAAG,EACZ,GAAGN,YADS;IAEZO,OAAO,EAAEF,QAAQ,CAAC,CAAD;EAFL,CAAhB,CAJsB,CAQtB;;EACAD,QAAQ,CAACI,kBAAT,CAA4BF,OAA5B,EAAqCG,IAArC,CAA2CC,GAAD,IAAS;IAAE;IACjDT,WAAW,CAACS,GAAG,CAACC,WAAL,CAAX,CAA6BF,IAA7B,CAAkC,MAAOC,GAAP,IAAe;MAAE;MAChD,OAAOE,OAAO,CAACC,GAAR,CAAa,MAAMX,QAAQ,CAACQ,GAAG,CAACI,KAAL,EAAYV,QAAZ,EAAsBC,QAAtB,CAA3B,CAAP;IACF,CAFD;EAGH,CAJD,EAIGU,KAJH,CAIUC,CAAD,IAAM;IACf;IACAJ,OAAO,CAACC,GAAR,CAAY,OAAZ;IACAT,QAAQ,CAACa,iBAAT,CAA2BX,OAA3B,EAAoCG,IAApC,CAA0CC,GAAD,IAAS;MAC9CT,WAAW,CAACS,GAAG,CAACC,WAAL,CAAX,CAA6BF,IAA7B,CAAmCC,GAAD,IAAS;QACvCE,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACQ,GAAG,CAACI,KAAL,EAAYV,QAAZ,EAAsBC,QAAtB,CAAR,CAAwCa,EAApD;MACH,CAFD;IAGH,CAJD;EAKC,CAZD;AAaH;;GAtBef,Q;UAEmBJ,O;;;KAFnBI,Q"},"metadata":{},"sourceType":"module"}