{"ast":null,"code":"var _jsxFileName = \"/Users/lucassjostrommacbook/collected-calendar-build/src/components/DataCollection/ReqUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport Button from \"react-bootstrap/Button\";\nimport { callForUser, callForEvent } from \"./GraphCalls\";\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleLogin(instance) {\n  //Handles login and catches exceptions\n  instance.loginRedirect(loginRequest).catch(e => {\n    console.error(e);\n  });\n}\n\nexport const getEvent = (data, instance, accounts) => {\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  data.map(user => {\n    instance.acquireTokenSilent(request).then(res => {\n      callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then(res => {\n        if (res.value === undefined || res === false) {} else {\n          console.log(user.displayName + \" # \" + user.userPrincipalName + \" | \" + (res === null || res === void 0 ? void 0 : res.value[0].subject) + \" _ \" + (res === null || res === void 0 ? void 0 : res.value[1].subject));\n          console.log(res.value[0]);\n          {\n            /*#__PURE__*/\n            _jsxDEV(RenderMeeting, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 26\n            }, this);\n          }\n        }\n      });\n    });\n  });\n};\nexport function GetUsers() {\n  _s();\n\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  CallUser();\n\n  function CallUser() {\n    const request = { ...loginRequest,\n      account: accounts[0]\n    };\n    instance.acquireTokenSilent(request).then(res => {\n      callForUser(res.accessToken).then(res => {\n        getEvent(res.value, instance, accounts);\n      });\n    }).catch(e => {\n      instance.acquireTokenPopup(request).then(res => {\n        callForUser(res.accessToken).then(res => {\n          getEvent(res.value);\n        });\n      });\n    });\n  }\n}\n\n_s(GetUsers, \"dXjh19YPAR1C3Q3VfJSLpkBSILY=\", false, function () {\n  return [useMsal];\n});\n\n_c = GetUsers;\nexport const ReqUsers = () => {\n  _s2();\n\n  //Bruger Msal (Microsfot Authentication Library.)\n  const {\n    instance\n  } = useMsal();\n  return (\n    /*#__PURE__*/\n    //Button class imported from react-boostrap\n    _jsxDEV(Button, {\n      className: \"ml-auto\",\n      onClick: () => handleLogin(instance),\n      children: \"Sign in using Redirect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s2(ReqUsers, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n\n_c2 = ReqUsers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GetUsers\");\n$RefreshReg$(_c2, \"ReqUsers\");","map":{"version":3,"names":["React","useMsal","loginRequest","Button","callForUser","callForEvent","RenderMeeting","handleLogin","instance","loginRedirect","catch","e","console","error","getEvent","data","accounts","request","account","map","user","acquireTokenSilent","then","res","accessToken","userPrincipalName","accountEnabled","value","undefined","log","displayName","subject","GetUsers","CallUser","acquireTokenPopup","ReqUsers"],"sources":["/Users/lucassjostrommacbook/collected-calendar-build/src/components/DataCollection/ReqUsers.jsx"],"sourcesContent":["import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\nimport Button from \"react-bootstrap/Button\"\nimport { callForUser, callForEvent } from \"./GraphCalls\"\nimport RenderMeeting from \"../RenderComponents/RenderMeeting\";\n\nfunction handleLogin(instance) {\n    //Handles login and catches exceptions\n    instance.loginRedirect(loginRequest).catch(e => {\n        console.error(e);\n    });\n}\n\nexport const getEvent = (data, instance, accounts) => {\n    const request = {\n        ...loginRequest,\n        account: accounts[0]\n    };  \n\n        data.map((user) => {\n        instance.acquireTokenSilent(request).then((res) => {\n                callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then((res) => {\n                    if(res.value === undefined || res === false){\n                    } else{\n                        console.log(user.displayName + \" # \" + user.userPrincipalName + \" | \" + res?.value[0].subject + \" _ \" + res?.value[1].subject)\n                        console.log(res.value[0])\n                        {<RenderMeeting />}\n                    }\n                })\n            })\n        })\n    }\n\nexport function GetUsers(){\n    const { instance, accounts } = useMsal();\n    CallUser();\n    function CallUser(){\n        const request = {\n            ...loginRequest,\n            account: accounts[0]\n        };\n    \n        instance.acquireTokenSilent(request).then((res) => {\n            callForUser(res.accessToken).then((res) => {\n                getEvent(res.value, instance, accounts)\n            })\n        }).catch((e) =>{\n        instance.acquireTokenPopup(request).then((res) => {\n            callForUser(res.accessToken).then((res) => {\n                getEvent(res.value);\n            })\n        })\n        })\n    }\n}\n\nexport const ReqUsers = () => {\n    //Bruger Msal (Microsfot Authentication Library.)\n    const { instance } = useMsal();\n    return (\n        //Button class imported from react-boostrap\n        <Button className=\"ml-auto\" onClick={() => handleLogin(instance)}>Sign in using Redirect</Button>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}