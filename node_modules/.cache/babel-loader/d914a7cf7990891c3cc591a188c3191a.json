{"ast":null,"code":"import React from 'react';\nimport { loginRequest } from '../../AuthenticationFolder/authConfig';\nimport { callForEvent } from './GraphCalls';\nexport function GetEvent(data, instance, accounts) {\n  const request = { ...loginRequest,\n    account: accounts[0]\n  };\n  instance.acquireTokenSilent(request).then(res => {\n    data.map(user => {\n      callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then(event => {\n        console.log(event);\n      });\n    });\n  });\n}\n_c = GetEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetEvent\");","map":{"version":3,"names":["React","loginRequest","callForEvent","GetEvent","data","instance","accounts","request","account","acquireTokenSilent","then","res","map","user","accessToken","userPrincipalName","accountEnabled","event","console","log"],"sources":["C:/Users/ljs/calendar/src/components/DataCollection/GetEvent.jsx"],"sourcesContent":["import React from 'react'\r\nimport { loginRequest } from '../../AuthenticationFolder/authConfig'\r\nimport { callForEvent } from './GraphCalls';\r\n\r\nexport function GetEvent (data, instance, accounts){\r\n    const request = {\r\n        ...loginRequest,\r\n        account: accounts[0]\r\n    };  \r\n    instance.acquireTokenSilent(request).then((res) => {\r\n        data.map((user) => {\r\n            callForEvent(res.accessToken, user.userPrincipalName, user.accountEnabled).then(event => {\r\n              console.log(event)\r\n            })\r\n        })\r\n    })\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,uCAA7B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAO,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,QAAnC,EAA4C;EAC/C,MAAMC,OAAO,GAAG,EACZ,GAAGN,YADS;IAEZO,OAAO,EAAEF,QAAQ,CAAC,CAAD;EAFL,CAAhB;EAIAD,QAAQ,CAACI,kBAAT,CAA4BF,OAA5B,EAAqCG,IAArC,CAA2CC,GAAD,IAAS;IAC/CP,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAU;MACfX,YAAY,CAACS,GAAG,CAACG,WAAL,EAAkBD,IAAI,CAACE,iBAAvB,EAA0CF,IAAI,CAACG,cAA/C,CAAZ,CAA2EN,IAA3E,CAAgFO,KAAK,IAAI;QACvFC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAFD;IAGH,CAJD;EAKH,CAND;AAOH;KAZed,Q"},"metadata":{},"sourceType":"module"}